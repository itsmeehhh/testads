import { firefox } from 'playwright';
import UserAgent from 'user-agents';

let url = "https://youtube.com/shorts/sI9VgfUvoI8?si=sLntyiaXnaO1Ol95";
console.log(`watching: ${url}`);

async function openPage() {
  return new Promise(async (resolve, reject) => {
    let browser;
    try {
      browser = await firefox.launch({ headless: false });
      const context = await browser.newContext({
        cookies: [
          { name: 'SOCS', value: 'CAISEwgDEgk2MzcwNjAwNTcaAmFyIAEaBgiAvdSyBg', domain: '.youtube.com', path: '/' },
          { name: 'PREF', value: 'tz=Africa.Casablanca&f7=4100&f4=4000000', domain: '.youtube.com', path: '/' },
          { name: 'APISID', value: 'X_heg210ystbf7Gk/A1l8xHtkeq5nCKCmb', domain: '.youtube.com', path: '/' },
          { name: 'SAPISID', value: '6fWfh_ffhP8GhFBe/ANO53-z5WbRCV4iXB', domain: '.youtube.com', path: '/' },
          { name: '__Secure-1PAPISID', value: '6fWfh_ffhP8GhFBe/ANO53-z5WbRCV4iXB', domain: '.youtube.com', path: '/' },
          { name: '__Secure-3PAPISID', value: '6fWfh_ffhP8GhFBe/ANO53-z5WbRCV4iXB', domain: '.youtube.com', path: '/' },
          { name: 'SID', value: 'g.a000kwhLhAh-by0XSp1LFMkEF_RA-CcwqWlOFcds0bo_gRft_y9MjvIW-jtcjGM___lvWGFt0AACgYKAYkSARMSFQHGX2MiAMSySNWs2ov-AoNLYO5fPxoVAUF8yKoRkl1Mp2GijHz6UOTRikcr0076', domain: '.youtube.com', path: '/' },
          { name: 'ST-6hujrl', value: 'csn=dsnYcuC-gtMIU3K6&itct=CBQQwJ4JGAAiEwi29dWb1t2GAxW6IAYAHZhqDaI%3D', domain: '.youtube.com', path: '/' },
          { name: 'SIDCC', value: 'AKEyXzWi5nrS6l6F4Km_pyPOAeLnMvJEK3AY1lDxYkZtMTAlwWTJ_JNzob3jK8e9UuNYf61i', domain: '.youtube.com', path: '/' }
        ]
      });

      const page = await context.newPage();
      // Add code here to navigate to the YouTube homepage or any other page to ensure the login state persists
      await page.goto("https://youtube.com", { timeout: 60000 });
      await page.waitForSelector('button[aria-label="Sign in"]');
      // You may need to add code here to handle any additional steps required to maintain the login state
      await page.goto(url, { timeout: 60000 });
      await page.click('button[aria-label="Play"]');
      await page.waitForTimeout(30000);
      resolve();
    } catch (error) {
      console.error('error:', error);
      reject(error);
    } finally {
      if (browser) {
        await browser.close();
      }
    }
  });
}

async function executeInParallel() {
  const promises = [];
  for (let i = 0; i < 1; i++) {
    const userAgent = new UserAgent();
    promises.push(openPage(userAgent.toString()));
  }
  await Promise.all(promises).catch(error => {
    console.error('error running the codes:', error);
  });
}

async function repeatForever() {
  while (true) {
    await executeInParallel();
    console.log(`watching again: ${url}`);
  }
}

repeatForever();
